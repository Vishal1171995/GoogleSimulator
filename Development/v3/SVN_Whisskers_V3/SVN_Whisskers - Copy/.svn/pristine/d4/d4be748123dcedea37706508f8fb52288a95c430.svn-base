using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Whisker.Models;
using System.Web.Mvc.Ajax;
using Whisker.App_Start;

namespace Whisker.Areas.Trainers.Controllers
{
    [SessionExpireFilterAttribute]
    public class ReportController : Controller
    {
        //
        // GET: /Trainers/Report/
        WhiskersDBEntities objDBentity = new WhiskersDBEntities();
        UserLoginInfo objUserInfo = new UserLoginInfo();
        public ActionResult Index()
        {
            //ViewBag.Active = "#li_Reports";
            return View();
        }
        public ActionResult Account()
        {
            ViewBag.Active = "#li_Reports";
            GetAccountDetails();
            return View();
        }
        public ActionResult Industry()
        {
            ViewBag.Active = "#li_Reports";
            GetAccountDetails();
            return View();
        }
        private ActionResult GetAccountDetails()
        {

            //ViewBag.FName = Request.Cookies["MainCookie"]["Name"];
            //ViewBag.UserID = Request.Cookies["MainCookie"]["Id"];
            //objUserInfo.UserID = ViewBag.UserID;
            //var userDetail = objDBentity.UserMasters.Where(x => x.UserID == objUserInfo.UserID).FirstOrDefault();
            //objUserInfo.FirstName = userDetail.FirstName;
            //objUserInfo.EMAILID = userDetail.Email;
            //objUserInfo.UserID = userDetail.UserID;

            if (Session["LoginInfo"] == null)
            {
                return RedirectToRoute("default");
            }
            else
            {
                objUserInfo = (UserLoginInfo)Session["LoginInfo"];
                string unicornName = objUserInfo.EMAILID;

                var userInfo = objDBentity.prcGetUserDetails(unicornName).FirstOrDefault();
                ViewBag.FName = userInfo.FirstName;
                ViewBag.AccCode = userInfo.AccCode;
                ViewBag.AccName = userInfo.AccName;
                ViewBag.ImagePath = userInfo.ImagePath;
                ViewBag.Description = userInfo.Description;
                ViewBag.AccFullName = userInfo.AccFullName;
                ViewBag.UserID = userInfo.UserID;
                return null;
            }
        }
        public JsonResult GetBatchDropdown()
        {
            GetAccountDetails();
            //var BatchCode = objDBentity.BatchAndTrainerMappings.Where(x => x.UserID == objUserInfo.UserID).OrderBy(x => x.BatchCode).Select(x => x.BatchCode).FirstOrDefault().ToString();

            List<object> AllAccountDetail = new List<object>();
            object AllBatches = objDBentity.prcGetCurrentBatches(objUserInfo.UserID, "a", null).ToArray();

            AllAccountDetail.Add(AllBatches);

            var vg = Json(AllAccountDetail, JsonRequestBehavior.AllowGet);
            return Json(AllAccountDetail, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAccountReport(string BatchCode)
        {
            GetAccountDetails();
            List<object> AllAccountDetail = new List<object>();
            if (BatchCode == null || BatchCode == "" || BatchCode == "undefined")
            {
                return Json(AllAccountDetail, JsonRequestBehavior.AllowGet);
            }
            object BatchDetails = objDBentity.prcGetCurrentBatches(objUserInfo.UserID, "a", BatchCode).FirstOrDefault();
            object AccountDetails = objDBentity.GetAccountReport(Convert.ToInt32(BatchCode)).ToArray();
            object CampaignDetails = objDBentity.GetAccountCampReport(Convert.ToInt32(BatchCode)).ToArray();
            object AdGroupDetails = objDBentity.GetAccountAdGrpReport(Convert.ToInt32(BatchCode)).ToArray();
            //object AdDetails = objDBentity.prcGetAccntsDetails(objUserInfo.UserID, BatchCode).ToArray();

            AllAccountDetail.Add(BatchDetails);
            AllAccountDetail.Add(AccountDetails);
            AllAccountDetail.Add(CampaignDetails);
            AllAccountDetail.Add(AdGroupDetails);
            //AllAccountDetail.Add(AdDetails);

            var vg = Json(AllAccountDetail, JsonRequestBehavior.AllowGet);
            return Json(AllAccountDetail, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetIndustryReport(string BatchCode)
        {
            GetAccountDetails();
            List<object> AllAccountDetail = new List<object>();
            BatchCode = "1001";
            if (BatchCode == null || BatchCode == "" || BatchCode == "undefined")
            {
                return Json(AllAccountDetail, JsonRequestBehavior.AllowGet);
            }


            object keywordDetails = objDBentity.GetIndustryReport_TopKey(Convert.ToInt32(BatchCode)).ToArray();
            object CampaignDetails = objDBentity.GetCampaignMatrix_Report(Convert.ToInt32(BatchCode)).ToArray();
            object AccountDetails = objDBentity.GetTopAccount_Report(Convert.ToInt32(BatchCode)).ToArray();

            //object AdDetails = objDBentity.prcGetAccntsDetails(objUserInfo.UserID, BatchCode).ToArray();

            AllAccountDetail.Add(keywordDetails);
            AllAccountDetail.Add(CampaignDetails);
            AllAccountDetail.Add(AccountDetails);

            //AllAccountDetail.Add(AdDetails);

            var vg = Json(AllAccountDetail, JsonRequestBehavior.AllowGet);
            return Json(AllAccountDetail, JsonRequestBehavior.AllowGet);
        }
    }
}
